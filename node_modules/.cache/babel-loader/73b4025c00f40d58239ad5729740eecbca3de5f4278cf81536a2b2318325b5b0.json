{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rouna\\\\OneDrive\\\\Documents\\\\WebDevelopment\\\\sih\\\\src\\\\components\\\\DropDownButton.js\";\nimport BadgeAvatars from \"./Avatar\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport SplitButton from 'react-bootstrap/SplitButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DropDirectioExample() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: ['up', 'up-centered', 'down', 'down-centered', 'start', 'end'].map(direction => /*#__PURE__*/_jsxDEV(DropdownButton, {\n        as: ButtonGroup,\n        id: `dropdown-button-drop-${direction}`,\n        drop: direction,\n        variant: \"secondary\",\n        title: ` Drop ${direction} `,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"1\",\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"2\",\n          children: \"Another action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"3\",\n          children: \"Something else here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"4\",\n          children: \"Separated link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)]\n      }, direction, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = DropDirectioExample;\nexport default DropDirectioExample;\nvar _c;\n$RefreshReg$(_c, \"DropDirectioExample\");","map":{"version":3,"names":["BadgeAvatars","Dropdown","DropdownButton","SplitButton","jsxDEV","_jsxDEV","Fragment","_Fragment","DropDirectioExample","children","className","map","direction","as","ButtonGroup","id","drop","variant","title","Item","eventKey","fileName","_jsxFileName","lineNumber","columnNumber","Divider","_c","$RefreshReg$"],"sources":["C:/Users/rouna/OneDrive/Documents/WebDevelopment/sih/src/components/DropDownButton.js"],"sourcesContent":["import BadgeAvatars from \"./Avatar\";\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport SplitButton from 'react-bootstrap/SplitButton';\r\n\r\nfunction DropDirectioExample() {\r\n    return (\r\n        <>\r\n            <div className=\"mb-2\">\r\n                {['up', 'up-centered', 'down', 'down-centered', 'start', 'end'].map(\r\n                    (direction) => (\r\n                        <DropdownButton\r\n                            as={ButtonGroup}\r\n                            key={direction}\r\n                            id={`dropdown-button-drop-${direction}`}\r\n                            drop={direction}\r\n                            variant=\"secondary\"\r\n                            title={` Drop ${direction} `}\r\n                        >\r\n                            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    ),\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DropDirectioExample;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,UAAU;AAEnC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,SAASC,mBAAmBA,CAAA,EAAG;EAC3B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,SAAS,EAAC,MAAM;MAAAD,QAAA,EAChB,CAAC,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,CAAC,CAACE,GAAG,CAC9DC,SAAS,iBACNP,OAAA,CAACH,cAAc;QACXW,EAAE,EAAEC,WAAY;QAEhBC,EAAE,EAAE,wBAAwBH,SAAS,EAAG;QACxCI,IAAI,EAAEJ,SAAU;QAChBK,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAE,SAASN,SAAS,GAAI;QAAAH,QAAA,gBAE7BJ,OAAA,CAACJ,QAAQ,CAACkB,IAAI;UAACC,QAAQ,EAAC,GAAG;UAAAX,QAAA,EAAC;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAClDnB,OAAA,CAACJ,QAAQ,CAACkB,IAAI;UAACC,QAAQ,EAAC,GAAG;UAAAX,QAAA,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAC1DnB,OAAA,CAACJ,QAAQ,CAACkB,IAAI;UAACC,QAAQ,EAAC,GAAG;UAAAX,QAAA,EAAC;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAC/DnB,OAAA,CAACJ,QAAQ,CAACwB,OAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpBnB,OAAA,CAACJ,QAAQ,CAACkB,IAAI;UAACC,QAAQ,EAAC,GAAG;UAAAX,QAAA,EAAC;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA,GAVrDZ,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWF,CAExB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACR,CAAC;AAEX;AAACE,EAAA,GAzBQlB,mBAAmB;AA2B5B,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}